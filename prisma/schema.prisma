generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Post {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  title String
  description String
  image String
  content String
  date DateTime @default(now())
  authorId String @db.ObjectId
  author User @relation(fields: [authorId], references: [id])
  tagIDs String[] @db.ObjectId
  tags Tag[] @relation(fields: [tagIDs], references: [id])
}

model User {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  email String @unique
  name String?
  password String
  posts Post[]
  admin Boolean @default(false)
  coins Int @default(0)
  achievements Achievement[] @relation(references: [id], fields: [achievementsIDs])
  achievementsIDs String[] @db.ObjectId
  lastDaily DateTime?
  doubleOrNothingGame DoubleOrNothingGame?
}

model Tag {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  name String
  specialStyle String?
  specialStyleToggled String?
  description String?
  postIDs String[] @db.ObjectId
  posts Post[] @relation(fields: [postIDs], references: [id])
}

model Achievement {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  name String
  description String
  unique_tag String? @unique
  image String
  users User[] @relation(references: [id], fields: [usersIDs])
  usersIDs String[] @db.ObjectId
  public Boolean @default(false)
}

model Thought {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  content String
  date DateTime @default(now())
}

model DoubleOrNothingGame {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  user User @relation(fields: [userId], references: [id])
  userId String @db.ObjectId @unique
  bet Int
  result Int
  date DateTime @default(now())
  status String @default("pending")
  mult Int @default(1)
}